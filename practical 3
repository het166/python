       Practical 3 
 
A) String Operations: Reverse a string, replace string with another string, merge two strings, Find character is in string or not without using loops, Split string into multiple words 
 

def reverse_string(string):
    return string[::-1]

def replace_string(original_string, old_substring, new_substring):
    return original_string.replace(old_substring, new_substring)


def merge_strings(string1, string2):
    return string1 + string2


def find_character_in_string(character, string):
    return character in string


def split_string(string):
    words = string.split()
    characters = list(string)
    return words, characters

s1 = "Het"
s2 = "Patel"
print("Reversed:", reverse_string(s1))
print("Replaced:", replace_string(s1, "e", "a"))
print("Merged:", merge_strings(s1, s2))
print("Character 'e' found in string:", find_character_in_string("e", s1))
print("Split:", split_string(s1))








B) Dictionaries Operations: Apply “Update, Delete, clear, popitem, pop, get, keys and values” operation in the dictionary. Create 3 dictionaries and merge them into dictionary 


# dict1 = dict()
print("Empty dict : ",dict1)
dict2 = {18:"Virat", 45:"Rohit", 77:"Gill"}
print("\nDictionary 2 : ",dict2)
dict3 = dict2.copy()
print("\nDictionary 3 : ",dict3.items())
ele = dict2.pop(77)
print("\nElement popped: ",ele)
print("\nLast item popped : ",dict2.popitem())
#only keys and only values
print("\nKeys : ",dict2.keys())
print("Values : ",dict2.values())
# dict4 = dict({33:"Hardik"})
dict4.update(dict2)
print("\nUpdated : ",dict4)

del dict4[18]
print("After deleting : ",dict4)
#merge 3 dictionaries
dict5 = {45:"Rohit"}
dict6 = dict({93:"Bumrah"})
dict7 = {**dict2,**dict5,**dict6}
print("\nAfter merging 3 dictionaries : ",dict7)
#clear function
print("Clear function : ",dict7.clear())





